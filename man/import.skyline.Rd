% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import.skyline.R
\name{import.skyline}
\alias{import.skyline}
\title{Import function for the SkyLine2D system linked to one GHG analyzer}
\usage{
import.skyline(
  inputfile,
  date.format = "ymd",
  timezone = "UTC",
  save = FALSE,
  background = FALSE,
  CH.col = "CH ID",
  CH.clo.col = "Chamber closed",
  sensor1 = "Analog Sensor1",
  sensor2 = "Analog Sensor2",
  inst = "Instrument",
  gas = c("CO2", "CH4 Dry", "N2O Dry", "H2O"),
  prec = c(0.24, 0.3, 5, 500),
  dry = T
)
}
\arguments{
\item{inputfile}{character string; the name of a file with the extension .csv}

\item{date.format}{character string; specifies the date format found in the
raw data file. Choose one of the following: "dmy", "ymd",
or "mdy". Default is "ymd", as it is the date format from
the example data file provided.}

\item{timezone}{character string; a time zone in which to import the data to
POSIXct format. Default is "UTC". Note about time zone: it is
recommended to use the time zone "UTC" to avoid any issue
related to summer time and winter time changes.}

\item{save}{logical; if \code{save = TRUE}, saves the file as an .RData file
in a RData folder in the current working directory. If
\code{save = FALSE}, returns the file in the Console, or load in
the Environment if assigned to an object.}

\item{background}{logical; if \code{background = FALSE}, removes all data
from the opened chamber.}

\item{CH.clo.col, CH.col}{character string; a pattern to match columns that
fit the corresponding parameters: \code{CH.col = "CH ID"} and
\code{CH.clo.col = "Chamber closed"}.}

\item{sensor1, sensor2}{character strings; a pattern to match the columns
containing the name of each sensor. By default,
\code{sensor1 = "Analog Sensor1"}, \code{sensor2 = "Analog Sensor2"},
to match the example data file provided with the package. Set to NULL
to ignore these columns.}

\item{inst}{character string; a pattern to match the column containing the
name of the GHG analyzer: \code{inst = "Instrument"}.}

\item{gas}{character vector; a pattern to match the columns containing each
gas measurement. By default, \code{gas = c("CO2", "CH4 Dry", "N2O Dry", "H2O")},
to match the example data file provided with the package.}

\item{prec}{numerical vector; the precision of the instrument for each gas
mentioned in \code{gas}. By default, \code{prec = c(0.24, 0.3, 5, 500)},
to match the example data file provided with the package. Note that
the order in the arguments \code{prec} must match the order of the
arguments in \code{gas}.}

\item{dry}{logical; are the gas measurements compensated for water vapor
(dry fraction)? If \code{dry = TRUE} (default), the gases are already
compensated for water vapor. Otherwise, the gases will be converted to
a dry fraction.}
}
\value{
A data frame containing raw data from the SkyLine2D system
}
\description{
Imports single raw gas measurement files from the SkyLine2D system from
Earth Bound Scientific from the datalog file created by GAIA2TECH. Default
settings are set for the Picarro G2508
(\ifelse{html}{\out{CO<sub>2</sub>}}{\eqn{CO[2]}{ASCII}},
\ifelse{html}{\out{CH<sub>4</sub>}}{\eqn{CH[4]}{ASCII}},
\ifelse{html}{\out{N<sub>2</sub>O}}{\eqn{N[2]O}{ASCII}} and
\ifelse{html}{\out{H<sub>2</sub>O}}{\eqn{H[2]O}{ASCII}}), to match the
example data file provided with the package.
}
\details{
This function has been designed for the SkyLine2D system file generated by
GAIA2TECH synced with the Picarro G2508
(\ifelse{html}{\out{CO<sub>2</sub>}}{\eqn{CO[2]}{ASCII}},
\ifelse{html}{\out{CH<sub>4</sub>}}{\eqn{CH[4]}{ASCII}},
\ifelse{html}{\out{N<sub>2</sub>O}}{\eqn{N[2]O}{ASCII}} and
\ifelse{html}{\out{H<sub>2</sub>O}}{\eqn{H[2]O}{ASCII}})). If this function
could be useful for you, but does not meet your needs, please contact the
maintainer of this package for potential adaptations.

In \code{date.format}, the date format refers to a date found in the raw data
file, not the date format in the file name. For the SkyLine2D system,
the date is found in the column "Titles:". Be mindful that when you open a
.csv file in Excel, the software often changes date formats. To avoid any
discrepancy, open the file in a text file.

The argument \code{CH.clo.col} corresponds to the column "Chamber closed".
Any number above 0 in that column indicate that the chamber is closed. The
argument \code{CH.col} corresponds to the column "CH ID" indicating which
chamber is active.

For each gas, the units are taken from the second row in the raw file (Units:).
If your instrument uses different units, either convert the units after
import, change the settings on your instruments, or contact the maintainer of
this package for support.

Regarding the parameters \code{dry}, in case of uncertainty, either contact
your technical support or assume that gases are compensated for water vapor,
which is normally the case.

As opposed to the other import functions, there is no option to "keep_all" with
this instrument. If you would like to import additional data using this
function, please contact the maintainer of this package for support.

The precision of the instrument is needed to restrict kappa-max
(\code{\link[goFlux]{k.max}}) in the non-linear flux calculation
(\code{\link[goFlux]{HM.flux}}). Kappa-max is inversely proportional to
instrument precision. If the precision of your instrument is unknown, it is
better to use a low value (e.g. 1 ppm for
\ifelse{html}{\out{CO<sub>2</sub>}}{\eqn{CO[2]}{ASCII}} and
\ifelse{html}{\out{H<sub>2</sub>O}}{\eqn{H[2]O}{ASCII}}, or 1 ppb for
\ifelse{html}{\out{CH<sub>4</sub>}}{\eqn{CH[4]}{ASCII}} and
\ifelse{html}{\out{N<sub>2</sub>O}}{\eqn{N[2]O}{ASCII}}) to allow for more
curvature, especially for water vapor fluxes, or very long measurements, that
are normally curved. The default values given for instrument precision are
the ones found online for the latest models of the
\href{https://www.picarro.com/environmental/products/g2508_gas_concentration_analyzer}{Picarro G2508},
available at the time of the creation of this function (10-2025).
}
\examples{
# Load file from downloaded package
file.path <- system.file("extdata", "skyline/skyline.csv", package = "goFlux")

# Run function
imp.skyline <- import.skyline(inputfile = file.path)
}
\seealso{
Use the wrapper function \code{\link[goFlux]{import2RData}}
         to import multiple files from the same folder path using any instrument.

See also, import functions for other instruments:
         \code{\link[goFlux]{import.DX4015}},
         \code{\link[goFlux]{import.EGM5}},
         \code{\link[goFlux]{import.G2201i}},
         \code{\link[goFlux]{import.G2508}},
         \code{\link[goFlux]{import.G4301}},
         \code{\link[goFlux]{import.GAIA}},
         \code{\link[goFlux]{import.GasmetPD}},
         \code{\link[goFlux]{import.GT5000}},
         \code{\link[goFlux]{import.LI6400}},
         \code{\link[goFlux]{import.LI7810}},
         \code{\link[goFlux]{import.LI7820}},
         \code{\link[goFlux]{import.LI8100}},
         \code{\link[goFlux]{import.LI8200}},
         \code{\link[goFlux]{import.LI8250}},
         \code{\link[goFlux]{import.N2OM1}},
         \code{\link[goFlux]{import.N2Oi2}},
         \code{\link[goFlux]{import.uCH4}},
         \code{\link[goFlux]{import.uN2O}},
         \code{\link[goFlux]{import.UGGA}}

See \code{\link[base]{timezones}} for a description of the underlying
         timezone attribute.
}
